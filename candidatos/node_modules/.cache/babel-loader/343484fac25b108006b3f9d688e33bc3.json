{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julio\\\\Desktop\\\\candidatos\\\\src\\\\components\\\\DCandidates.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/dCandidate';\nimport { Grid, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core';\nimport DCandidateForm from './DCandidateForm';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Container, Row } from 'react-bootstrap';\n\nconst styles = theme => ({\n  root: {\n    \"& .MuiTableCell-head\": {\n      fontSize: \"1.25rem\"\n    }\n  },\n  paper: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2)\n  }\n});\n\nconst DCandidates = ({\n  classes,\n  ...props\n}) => {\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllDCandidates();\n  }, []); //componentDidMount\n  //toast msg.\n\n  const {\n    addToast\n  } = useToasts();\n\n  const onDelete = id => {\n    if (window.confirm('Are you sure to delete this record?')) props.deleteDCandidate(id, () => addToast(\"Deleted successfully\", {\n      appearance: 'info'\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DCandidateForm, Object.assign({\n    currentId,\n    setCurrentId\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, \"Mobile\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, \"Blood Group\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, props.dCandidateList.map((record, index) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }, record.fullName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }\n    }, record.mobile), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }, record.bloodGroup), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      color: \"primary\",\n      onClick: () => {\n        setCurrentId(record.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      color: \"secondary\",\n      onClick: () => onDelete(record.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 61\n      }\n    })))));\n  }))))))));\n};\n\nconst mapStateToProps = state => ({\n  dCandidateList: state.dCandidate.list\n});\n\nconst mapActionToProps = {\n  fetchAllDCandidates: actions.fetchAll,\n  deleteDCandidate: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidates));","map":{"version":3,"sources":["C:/Users/julio/Desktop/candidatos/src/components/DCandidates.js"],"names":["React","useState","useEffect","connect","actions","Grid","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","withStyles","ButtonGroup","Button","DCandidateForm","EditIcon","DeleteIcon","useToasts","Container","Row","styles","theme","root","fontSize","paper","margin","spacing","padding","DCandidates","classes","props","currentId","setCurrentId","fetchAllDCandidates","addToast","onDelete","id","window","confirm","deleteDCandidate","appearance","dCandidateList","map","record","index","fullName","mobile","bloodGroup","mapStateToProps","state","dCandidate","list","mapActionToProps","fetchAll","Delete"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/dCandidate';\r\nimport {Grid, Paper, TableContainer, Table, TableHead, TableRow,TableCell, TableBody, withStyles, ButtonGroup, Button} from '@material-ui/core';\r\nimport DCandidateForm from './DCandidateForm';\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport {Container, Row} from 'react-bootstrap';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"1.25rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    }\r\n})\r\n\r\nconst DCandidates = ({ classes, ...props }) => {\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllDCandidates()\r\n    }, [])//componentDidMount\r\n    \r\n    //toast msg.\r\n    const { addToast } = useToasts()\r\n\r\n    const onDelete = id => {\r\n        if (window.confirm('Are you sure to delete this record?'))\r\n            props.deleteDCandidate(id,()=>addToast(\"Deleted successfully\", { appearance: 'info' }))\r\n    }\r\n    return (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Container>\r\n            <Row>\r\n              <Col item xs={6}>\r\n                    <DCandidateForm {...({ currentId, setCurrentId })} />\r\n                </Col>\r\n                <Col item xs={6}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead className={classes.root}>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Mobile</TableCell>\r\n                                    <TableCell>Blood Group</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.dCandidateList.map((record, index) => {\r\n                                        return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.fullName}</TableCell>\r\n                                            <TableCell>{record.mobile}</TableCell>\r\n                                            <TableCell>{record.bloodGroup}</TableCell>\r\n                                            <TableCell>\r\n                                                <ButtonGroup variant=\"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                        onClick={() => { setCurrentId(record.id) }} /></Button>\r\n                                                    <Button><DeleteIcon color=\"secondary\"\r\n                                                        onClick={() => onDelete(record.id)} /></Button>\r\n                                                </ButtonGroup>\r\n                                            </TableCell>\r\n                                        </TableRow>)\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dCandidateList: state.dCandidate.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllDCandidates: actions.fetchAll,\r\n    deleteDCandidate: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidates));"]},"metadata":{},"sourceType":"module"}